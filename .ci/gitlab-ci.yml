

stages:
  - sanity
  - static_targets
  - parameterized_targets
  - test

#************ definition of base jobs *********************************************************************************#
# https://docs.gitlab.com/ee/ci/yaml/README.html#workflowrules-templates
include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

.base:
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure

    tags:
      - amm-only_sb_dind
    variables:
      DOCKER_CLI_EXPERIMENTAL: enabled
      REGISTRY_PREFIX: $CI_REGISTRY/pymor/docker/pymor
      DIVE_VERSION: 0.10.0
      BUILDX_NO_DEFAULT_LOAD: 0

.docker_base:
    extends: .base
    before_script:
      - docker buildx create --use --name build --node build --driver docker-container --driver-opt network=host
      - docker buildx ls
      - docker buildx inspect
      - apk add make sed rsync bash git wget python3
      - wget -q https://github.com/wagoodman/dive/releases/download/v${DIVE_VERSION}/dive_${DIVE_VERSION}_linux_amd64.tar.gz         -O - | tar -xz -C /usr/local/bin
      - chmod +x /usr/local/bin/dive
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD docker.io

    artifacts:
        paths:
            - dive*.log

sanity:
    extends: .docker_base
    stage: sanity
    script:
        - docker ps
        - make ci_update
        - make readmes
        - make CNTR_CMD="echo docker" all
        - make IS_DIRTY
parameterized_targets 3 8:
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: cache_3.8
    stage: parameterized_targets
    variables:
        PYVER: "3.8"
    script: |
      make python_builder_3.8

      make python_3.8

      make constraints_3.8

      make dealii_3.8

      make petsc_3.8

      make dolfinx_3.8

      make pypi-mirror_stable_3.8

      make pypi-mirror_oldest_3.8

      make ngsolve_3.8

      make fenics_3.8

      make precice_3.8

      make cibase_3.8

      make testing_3.8

      make jupyter_3.8

      make minimal_cibase_3.8

      make minimal_testing_3.8


parameterized_targets 3 8 (scheduled):
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: never
    - when: on_success
    resource_group: cache_3.8
    stage: parameterized_targets
    variables:
        PYVER: "3.8"
    script: |
      make DIVE_CHECK=1 VER=weekly_cron python_builder_3.8

      make DIVE_CHECK=1 VER=weekly_cron python_3.8

      make DIVE_CHECK=1 VER=weekly_cron constraints_3.8

      make DIVE_CHECK=1 VER=weekly_cron dealii_3.8

      make DIVE_CHECK=1 VER=weekly_cron petsc_3.8

      make DIVE_CHECK=1 VER=weekly_cron dolfinx_3.8

      make DIVE_CHECK=1 VER=weekly_cron pypi-mirror_stable_3.8

      make DIVE_CHECK=1 VER=weekly_cron pypi-mirror_oldest_3.8

      make DIVE_CHECK=1 VER=weekly_cron ngsolve_3.8

      make DIVE_CHECK=1 VER=weekly_cron fenics_3.8

      make DIVE_CHECK=1 VER=weekly_cron precice_3.8

      make DIVE_CHECK=1 VER=weekly_cron cibase_3.8

      make DIVE_CHECK=1 VER=weekly_cron testing_3.8

      make DIVE_CHECK=1 VER=weekly_cron jupyter_3.8

      make DIVE_CHECK=1 VER=weekly_cron minimal_cibase_3.8

      make DIVE_CHECK=1 VER=weekly_cron minimal_testing_3.8


parameterized_targets 3 8 (tagged):
    extends: .docker_base
    rules:
    - if: '$CI_COMMIT_TAG != null'
      when: never
    - when: on_success
    resource_group: cache_3.8
    stage: parameterized_targets
    variables:
        PYVER: "3.8"
    script: |
      make VER=$CI_COMMIT_TAG python_builder_3.8

      make VER=$CI_COMMIT_TAG python_3.8

      make VER=$CI_COMMIT_TAG constraints_3.8

      make VER=$CI_COMMIT_TAG dealii_3.8

      make VER=$CI_COMMIT_TAG petsc_3.8

      make VER=$CI_COMMIT_TAG dolfinx_3.8

      make VER=$CI_COMMIT_TAG pypi-mirror_stable_3.8

      make VER=$CI_COMMIT_TAG pypi-mirror_oldest_3.8

      make VER=$CI_COMMIT_TAG ngsolve_3.8

      make VER=$CI_COMMIT_TAG fenics_3.8

      make VER=$CI_COMMIT_TAG precice_3.8

      make VER=$CI_COMMIT_TAG cibase_3.8

      make VER=$CI_COMMIT_TAG testing_3.8

      make VER=$CI_COMMIT_TAG jupyter_3.8

      make VER=$CI_COMMIT_TAG minimal_cibase_3.8

      make VER=$CI_COMMIT_TAG minimal_testing_3.8



parameterized_targets 3 9:
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: cache_3.9
    stage: parameterized_targets
    variables:
        PYVER: "3.9"
    script: |
      make python_builder_3.9

      make python_3.9

      make constraints_3.9

      make dealii_3.9

      make petsc_3.9

      make dolfinx_3.9

      make pypi-mirror_stable_3.9

      make pypi-mirror_oldest_3.9

      make ngsolve_3.9

      make fenics_3.9

      make precice_3.9

      make cibase_3.9

      make testing_3.9

      make jupyter_3.9

      make minimal_cibase_3.9

      make minimal_testing_3.9


parameterized_targets 3 9 (scheduled):
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: never
    - when: on_success
    resource_group: cache_3.9
    stage: parameterized_targets
    variables:
        PYVER: "3.9"
    script: |
      make DIVE_CHECK=1 VER=weekly_cron python_builder_3.9

      make DIVE_CHECK=1 VER=weekly_cron python_3.9

      make DIVE_CHECK=1 VER=weekly_cron constraints_3.9

      make DIVE_CHECK=1 VER=weekly_cron dealii_3.9

      make DIVE_CHECK=1 VER=weekly_cron petsc_3.9

      make DIVE_CHECK=1 VER=weekly_cron dolfinx_3.9

      make DIVE_CHECK=1 VER=weekly_cron pypi-mirror_stable_3.9

      make DIVE_CHECK=1 VER=weekly_cron pypi-mirror_oldest_3.9

      make DIVE_CHECK=1 VER=weekly_cron ngsolve_3.9

      make DIVE_CHECK=1 VER=weekly_cron fenics_3.9

      make DIVE_CHECK=1 VER=weekly_cron precice_3.9

      make DIVE_CHECK=1 VER=weekly_cron cibase_3.9

      make DIVE_CHECK=1 VER=weekly_cron testing_3.9

      make DIVE_CHECK=1 VER=weekly_cron jupyter_3.9

      make DIVE_CHECK=1 VER=weekly_cron minimal_cibase_3.9

      make DIVE_CHECK=1 VER=weekly_cron minimal_testing_3.9


parameterized_targets 3 9 (tagged):
    extends: .docker_base
    rules:
    - if: '$CI_COMMIT_TAG != null'
      when: never
    - when: on_success
    resource_group: cache_3.9
    stage: parameterized_targets
    variables:
        PYVER: "3.9"
    script: |
      make VER=$CI_COMMIT_TAG python_builder_3.9

      make VER=$CI_COMMIT_TAG python_3.9

      make VER=$CI_COMMIT_TAG constraints_3.9

      make VER=$CI_COMMIT_TAG dealii_3.9

      make VER=$CI_COMMIT_TAG petsc_3.9

      make VER=$CI_COMMIT_TAG dolfinx_3.9

      make VER=$CI_COMMIT_TAG pypi-mirror_stable_3.9

      make VER=$CI_COMMIT_TAG pypi-mirror_oldest_3.9

      make VER=$CI_COMMIT_TAG ngsolve_3.9

      make VER=$CI_COMMIT_TAG fenics_3.9

      make VER=$CI_COMMIT_TAG precice_3.9

      make VER=$CI_COMMIT_TAG cibase_3.9

      make VER=$CI_COMMIT_TAG testing_3.9

      make VER=$CI_COMMIT_TAG jupyter_3.9

      make VER=$CI_COMMIT_TAG minimal_cibase_3.9

      make VER=$CI_COMMIT_TAG minimal_testing_3.9


static_targets:
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: cache_
    stage: static_targets
    variables:
        PYVER: ""
    script: |
      make VER=$CI_COMMIT_TAG docker-in-docker

      make VER=$CI_COMMIT_TAG demo_main

      make VER=$CI_COMMIT_TAG deploy_checks

      make VER=$CI_COMMIT_TAG ci_sanity

      make VER=$CI_COMMIT_TAG devpi


static_targets (scheduled):
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: never
    - when: on_success
    resource_group: cache_
    stage: static_targets
    variables:
        PYVER: ""
    script: |
      make DIVE_CHECK=1 VER=weekly_cron docker-in-docker

      make DIVE_CHECK=1 VER=weekly_cron demo_main

      make DIVE_CHECK=1 VER=weekly_cron deploy_checks

      make DIVE_CHECK=1 VER=weekly_cron ci_sanity

      make DIVE_CHECK=1 VER=weekly_cron devpi


static_targets (tagged):
    extends: .docker_base
    rules:
    - if: '$CI_COMMIT_TAG != null'
      when: never
    - when: on_success
    resource_group: cache_
    stage: static_targets
    variables:
        PYVER: ""
    script: |
      make VER=$CI_COMMIT_TAG docker-in-docker

      make VER=$CI_COMMIT_TAG demo_main

      make VER=$CI_COMMIT_TAG deploy_checks

      make VER=$CI_COMMIT_TAG ci_sanity

      make VER=$CI_COMMIT_TAG devpi

test oldest 3 8:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    services:
        - name: $REGISTRY_PREFIX/pypi-mirror_oldest_py3.8:$CI_COMMIT_SHA
          alias: pypi_mirror
    image: $REGISTRY_PREFIX/testing_py3.8:$CI_COMMIT_SHA
    script:
        - ./.ci/test.bash

test compose oldest 3 8:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: compose
    needs: ["parameterized_targets 3 8"]
    script:
        - echo DISABLED make pypi-mirror_test_3.8


test oldest 3 9:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    services:
        - name: $REGISTRY_PREFIX/pypi-mirror_oldest_py3.9:$CI_COMMIT_SHA
          alias: pypi_mirror
    image: $REGISTRY_PREFIX/testing_py3.9:$CI_COMMIT_SHA
    script:
        - ./.ci/test.bash

test compose oldest 3 9:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: compose
    needs: ["parameterized_targets 3 9"]
    script:
        - echo DISABLED make pypi-mirror_test_3.9



test stable 3 8:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    services:
        - name: $REGISTRY_PREFIX/pypi-mirror_stable_py3.8:$CI_COMMIT_SHA
          alias: pypi_mirror
    image: $REGISTRY_PREFIX/testing_py3.8:$CI_COMMIT_SHA
    script:
        - ./.ci/test.bash

test compose stable 3 8:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: compose
    needs: ["parameterized_targets 3 8"]
    script:
        - echo DISABLED make pypi-mirror_test_3.8


test stable 3 9:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    services:
        - name: $REGISTRY_PREFIX/pypi-mirror_stable_py3.9:$CI_COMMIT_SHA
          alias: pypi_mirror
    image: $REGISTRY_PREFIX/testing_py3.9:$CI_COMMIT_SHA
    script:
        - ./.ci/test.bash

test compose stable 3 9:
    stage: test
    extends: .base
    rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: '$CI_COMMIT_TAG == null'
      when: never
    - when: on_success
    resource_group: compose
    needs: ["parameterized_targets 3 9"]
    script:
        - echo DISABLED make pypi-mirror_test_3.9



main rebuild 3 8 (scheduled):
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: never
    - when: on_success
    resource_group: cache_3.8
    needs: [sanity]
    stage: parameterized_targets
    variables:
        PYVER: "3.8"
    script: |
      wget https://raw.githubusercontent.com/pymor/pymor/main/.env -O pymor.env
      source pymor.env
      set -u
      git checkout ${CI_IMAGE_TAG}

      make VER=${CI_IMAGE_TAG} docker-in-docker

      make VER=${CI_IMAGE_TAG} demo_main

      make VER=${CI_IMAGE_TAG} deploy_checks

      make VER=${CI_IMAGE_TAG} ci_sanity

      make VER=${CI_IMAGE_TAG} devpi


      make VER=${CI_IMAGE_TAG} 3.8

main rebuild 3 9 (scheduled):
    extends: .docker_base
    rules:
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: never
    - when: on_success
    resource_group: cache_3.9
    needs: [sanity]
    stage: parameterized_targets
    variables:
        PYVER: "3.9"
    script: |
      wget https://raw.githubusercontent.com/pymor/pymor/main/.env -O pymor.env
      source pymor.env
      set -u
      git checkout ${CI_IMAGE_TAG}

      make VER=${CI_IMAGE_TAG} 3.9
# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run template.ci.py instead       #
